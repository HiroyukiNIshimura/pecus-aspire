<?xml version="1.0" encoding="utf-8"?>
<nlog
    xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd"
    autoReload="true"
    throwConfigExceptions="true"
    internalLogLevel="Info"
    internalLogFile="${basedir}/internal-nlog-AspNetCore.txt"
>
    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore" />
    </extensions>
    <!-- the targets to write to -->
    <targets>
        <!-- File Target for all log messages with basic details -->
        <target
            xsi:type="File"
            name="allfile"
            fileName="${basedir}/log/nlog-all-${date:format=yyyyMMdd}.log"
            encoding="UTF-8"
            archiveNumbering="Date"
            archiveDateFormat="yyyyMMdd"
            maxArchiveFiles="10"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}"
        />
        <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
        <target
            xsi:type="File"
            name="api"
            fileName="${basedir}/log/nlog-api-${date:format=yyyyMMdd}.log"
            encoding="UTF-8"
            archiveNumbering="Date"
            archiveDateFormat="yyyyMMdd"
            maxArchiveFiles="10"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}"
        />
        <target
            xsi:type="File"
            name="httpLogging"
            fileName="${basedir}/log/nlog-access-${date:format=yyyyMMdd}.log"
            encoding="UTF-8"
            archiveNumbering="Date"
            archiveDateFormat="yyyyMMdd"
            maxArchiveFiles="10"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}"
        />
        <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
        <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
    </targets>
    <!-- rules to map from logger name to target -->
    <rules>
        <!-- All logs, including from Microsoft -->
        <logger name="*" minlevel="Trace" writeTo="allfile" />
        <logger
            name="Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware"
            minlevel="Info"
            writeTo="httpLogging"
            final="true"
        />
        <!-- Suppress output from Microsoft framework when non-critical -->
        <logger name="System.*" finalMinLevel="Warn" />
        <logger name="Microsoft.*" finalMinLevel="Warn" />
        <!-- Keep output from Microsoft.Hosting.Lifetime to console for fast startup detection -->
        <logger name="Microsoft.Hosting.Lifetime*" finalMinLevel="Info" writeTo="lifetimeConsole" />
        <logger name="*" minLevel="Trace" writeTo="api" />
    </rules>
</nlog>
