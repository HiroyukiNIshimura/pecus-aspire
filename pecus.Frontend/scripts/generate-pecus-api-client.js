#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const PECUS_APIS_DIR = path.join(__dirname, '..', 'src', 'connectors', 'api', 'pecus', 'apis');
const OUTPUT_FILE = path.join(__dirname, '..', 'src', 'connectors', 'api', 'PecusApiClient.generated.ts');

function getApiClassName(fileName) {
  return fileName.replace('.ts', '');
}

function generateFileContent(apiClasses) {
  let content = '// „Åì„ÅÆ„Éï„Ç°„Ç§„É´„ÅØËá™ÂãïÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇÊâãÂãï„ÅßÁ∑®ÈõÜ„Åó„Å™„ÅÑ„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ\n';
  content += '// Generated by: scripts/generate-pecus-api-client.js\n\n';
  content += 'import * as PecusApis from "./pecus";\n';
  content += 'import { AxiosInstance } from \'axios\';\n\n';
  content += '// ‰∏ªË¶Å„Å™API„ÇØ„É©„Çπ„Çí„Ç§„É≥„Éù„Éº„Éà„Åó„Å¶ÂûãÂÆâÂÖ®„Å´„Åô„Çã\n';
  content += 'import {\n';
  content += '  Configuration,\n';

  apiClasses.forEach((className, index) => {
    content += `  ${className}`;
    if (index < apiClasses.length - 1) content += ',';
    content += '\n';
  });

  content += '} from "./pecus";\n\n';
  content += '/**\n';
  content += ' * API „ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÅÆ„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰ΩúÊàê„Åô„ÇãÈñ¢Êï∞\n';
  content += ' * @param axiosInstance - „Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åï„Çå„Åü axios „Ç§„É≥„Çπ„Çø„É≥„Çπ\n';
  content += ' * @returns API „ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÅÆ„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà\n';
  content += ' */\n';
  content += 'export function createApiClientInstances(axiosInstance: AxiosInstance) {\n';
  content += '  const config = new PecusApis.Configuration({\n';
  content += '    basePath: process.env.API_BASE_URL || \'https://localhost:7265\',\n';
  content += '  });\n\n';
  content += '  return {\n';

  apiClasses.forEach((className, index) => {
    let propertyName = className.charAt(0).toLowerCase() + className.slice(1);
    if (propertyName.endsWith('Api')) {
      propertyName = propertyName.slice(0, -3);
    }
    content += `    ${propertyName}: new PecusApis.${className}(config, undefined, axiosInstance)`;
    if (index < apiClasses.length - 1) content += ',';
    content += '\n';
  });

  content += '  };\n';
  content += '}\n';

  return content;
}

function main() {
  try {
    console.log('üîç Scanning pecus/apis directory...');

    const files = fs.readdirSync(PECUS_APIS_DIR)
      .filter(f => f.endsWith('.ts') && f !== 'index.ts')
      .sort();

    console.log(`üìã Found ${files.length} API files:`);
    files.forEach(file => console.log(`  - ${file}`));

    const apiClasses = files.map(getApiClassName);
    console.log(`üèóÔ∏è  Generated ${apiClasses.length} API class names`);

    const content = generateFileContent(apiClasses);
    fs.writeFileSync(OUTPUT_FILE, content, 'utf8');

    console.log(`‚úÖ PecusApiClient.generated.ts generated successfully at: ${OUTPUT_FILE}`);
    console.log(`üìä Generated ${apiClasses.length} API client instances`);

  } catch (error) {
    console.error('‚ùå Error generating PecusApiClient.generated.ts:', error);
    process.exit(1);
  }
}

if (require.main === module) main();
module.exports = { main };
