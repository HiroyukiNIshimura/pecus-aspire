#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const PECUS_SERVICES_DIR = path.join(__dirname, '..', 'src', 'connectors', 'api', 'pecus', 'services');
const OUTPUT_FILE = path.join(__dirname, '..', 'src', 'connectors', 'api', 'PecusApiClient.generated.ts');

function getServiceClassName(fileName) {
  return fileName.replace('.ts', '');
}

function generateFileContent(serviceClasses) {
  let content = '// „Åì„ÅÆ„Éï„Ç°„Ç§„É´„ÅØËá™ÂãïÁîüÊàê„Åï„Çå„Åæ„Åô„ÄÇÊâãÂãï„ÅßÁ∑®ÈõÜ„Åó„Å™„ÅÑ„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ\n';
  content += '// Generated by: scripts/generate-pecus-api-client.js\n\n';
  content += 'import { OpenAPI } from "./pecus/core/OpenAPI";\n';
  content += 'import {\n';

  serviceClasses.forEach((className, index) => {
    content += `  ${className}`;
    if (index < serviceClasses.length - 1) content += ',';
    content += '\n';
  });

  content += '} from "./pecus";\n\n';
  content += '/**\n';
  content += ' * OpenAPI Ë®≠ÂÆö„ÇíÂàùÊúüÂåñ„Åô„ÇãÈñ¢Êï∞\n';
  content += ' * @param baseUrl - API „ÅÆ„Éô„Éº„Çπ URL\n';
  content += ' * @param getToken - „Éà„Éº„ÇØ„É≥ÂèñÂæóÈñ¢Êï∞Ôºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ\n';
  content += ' */\n';
  content += 'export function configureOpenAPI(\n';
  content += '  baseUrl: string,\n';
  content += '  getToken?: () => Promise<string | undefined>\n';
  content += ') {\n';
  content += '  OpenAPI.BASE = baseUrl;\n';
  content += '  OpenAPI.WITH_CREDENTIALS = true;\n';
  content += '  OpenAPI.CREDENTIALS = \'include\';\n';
  content += '  \n';
  content += '  if (getToken) {\n';
  content += '    OpenAPI.TOKEN = async () => {\n';
  content += '      const token = await getToken();\n';
  content += '      return token || \'\';\n';
  content += '    };\n';
  content += '  }\n';
  content += '}\n\n';
  content += '/**\n';
  content += ' * API „Çµ„Éº„Éì„Çπ„ÅÆ„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÇíËøî„ÅôÈñ¢Êï∞\n';
  content += ' * @returns API „Çµ„Éº„Éì„Çπ„ÅÆ„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà\n';
  content += ' */\n';
  content += 'export function createApiClientInstances() {\n';
  content += '  return {\n';

  serviceClasses.forEach((className, index) => {
    let propertyName = className.charAt(0).toLowerCase() + className.slice(1);
    if (propertyName.endsWith('Service')) {
      propertyName = propertyName.slice(0, -7);
    }
    content += `    ${propertyName}: ${className}`;
    if (index < serviceClasses.length - 1) content += ',';
    content += '\n';
  });

  content += '  };\n';
  content += '}\n';

  return content;
}

function main() {
  try {
    console.log('üîç Scanning pecus/services directory...');

    if (!fs.existsSync(PECUS_SERVICES_DIR)) {
      console.error(`‚ùå Services directory not found: ${PECUS_SERVICES_DIR}`);
      console.error('Please run "npm run generate:api" first to generate API client code.');
      process.exit(1);
    }

    const files = fs.readdirSync(PECUS_SERVICES_DIR)
      .filter(f => f.endsWith('.ts') && f !== 'index.ts')
      .sort();

    console.log(`üìã Found ${files.length} Service files:`);
    files.forEach(file => console.log(`  - ${file}`));

    const serviceClasses = files.map(getServiceClassName);
    console.log(`üèóÔ∏è  Generated ${serviceClasses.length} Service class names`);

    const content = generateFileContent(serviceClasses);
    fs.writeFileSync(OUTPUT_FILE, content, 'utf8');

    console.log(`‚úÖ PecusApiClient.generated.ts generated successfully at: ${OUTPUT_FILE}`);
    console.log(`üìä Generated ${serviceClasses.length} API service instances`);

  } catch (error) {
    console.error('‚ùå Error generating PecusApiClient.generated.ts:', error);
    process.exit(1);
  }
}

if (require.main === module) main();
module.exports = { main };
