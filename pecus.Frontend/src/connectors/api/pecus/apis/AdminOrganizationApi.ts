/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  OrganizationDetailResponse,
  OrganizationResponse,
  UpdateOrganizationRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    OrganizationDetailResponseFromJSON,
    OrganizationDetailResponseToJSON,
    OrganizationResponseFromJSON,
    OrganizationResponseToJSON,
    UpdateOrganizationRequestFromJSON,
    UpdateOrganizationRequestToJSON,
} from '../models/index';

export interface ApiAdminOrganizationPutRequest {
    updateOrganizationRequest?: UpdateOrganizationRequest;
}

/**
 * 
 */
export class AdminOrganizationApi extends runtime.BaseAPI {

    /**
     * ログイン中のユーザーが属する組織の詳細情報を取得します。
     * 自組織の情報を取得
     */
    async apiAdminOrganizationGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationDetailResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/admin/organization`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OrganizationDetailResponseFromJSON(jsonValue));
    }

    /**
     * ログイン中のユーザーが属する組織の詳細情報を取得します。
     * 自組織の情報を取得
     */
    async apiAdminOrganizationGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationDetailResponse> {
        const response = await this.apiAdminOrganizationGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * ログイン中のユーザーが属する組織の情報を更新します。
     * 自組織の情報を更新
     */
    async apiAdminOrganizationPutRaw(requestParameters: ApiAdminOrganizationPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/admin/organization`;

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateOrganizationRequestToJSON(requestParameters['updateOrganizationRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OrganizationResponseFromJSON(jsonValue));
    }

    /**
     * ログイン中のユーザーが属する組織の情報を更新します。
     * 自組織の情報を更新
     */
    async apiAdminOrganizationPut(requestParameters: ApiAdminOrganizationPutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationResponse> {
        const response = await this.apiAdminOrganizationPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
