/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RecipientRequest,
} from '../models/index';
import {
    RecipientRequestFromJSON,
    RecipientRequestToJSON,
} from '../models/index';

export interface ApiDevEmailTestSendPostRequest {
    template?: string;
}

export interface ApiDevEmailTestSetRecipientPostRequest {
    recipientRequest?: RecipientRequest;
}

/**
 * 
 */
export class TestEmailApi extends runtime.BaseAPI {

    /**
     * テスト送信（テンプレート名を指定）
     */
    async apiDevEmailTestSendPostRaw(requestParameters: ApiDevEmailTestSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters['template'] != null) {
            queryParameters['template'] = requestParameters['template'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/dev/email-test/send`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * テスト送信（テンプレート名を指定）
     */
    async apiDevEmailTestSendPost(requestParameters: ApiDevEmailTestSendPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiDevEmailTestSendPostRaw(requestParameters, initOverrides);
    }

    /**
     * テスト用受信先を設定する
     */
    async apiDevEmailTestSetRecipientPostRaw(requestParameters: ApiDevEmailTestSetRecipientPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/dev/email-test/set-recipient`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RecipientRequestToJSON(requestParameters['recipientRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * テスト用受信先を設定する
     */
    async apiDevEmailTestSetRecipientPost(requestParameters: ApiDevEmailTestSetRecipientPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiDevEmailTestSetRecipientPostRaw(requestParameters, initOverrides);
    }

    /**
     * 利用可能なテンプレート一覧を返す
     */
    async apiDevEmailTestTemplatesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/dev/email-test/templates`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 利用可能なテンプレート一覧を返す
     */
    async apiDevEmailTestTemplatesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiDevEmailTestTemplatesGetRaw(initOverrides);
    }

}
