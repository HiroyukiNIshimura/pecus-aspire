/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ジャンル基本レスポンス
 * @export
 * @interface GenreResponse
 */
export interface GenreResponse {
    /**
     * ジャンルID
     * @type {number}
     * @memberof GenreResponse
     */
    id?: number;
    /**
     * ジャンル名
     * @type {string}
     * @memberof GenreResponse
     */
    name: string | null;
    /**
     * ジャンルの説明
     * @type {string}
     * @memberof GenreResponse
     */
    description?: string | null;
    /**
     * ジャンルアイコン
     * @type {string}
     * @memberof GenreResponse
     */
    icon?: string | null;
    /**
     * 表示順
     * @type {number}
     * @memberof GenreResponse
     */
    displayOrder?: number;
    /**
     * 作成日時
     * @type {Date}
     * @memberof GenreResponse
     */
    createdAt?: Date;
    /**
     * 更新日時
     * @type {Date}
     * @memberof GenreResponse
     */
    updatedAt?: Date | null;
    /**
     * 有効フラグ
     * @type {boolean}
     * @memberof GenreResponse
     */
    isActive?: boolean;
}

/**
 * Check if a given object implements the GenreResponse interface.
 */
export function instanceOfGenreResponse(value: object): value is GenreResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function GenreResponseFromJSON(json: any): GenreResponse {
    return GenreResponseFromJSONTyped(json, false);
}

export function GenreResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenreResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'displayOrder': json['displayOrder'] == null ? undefined : json['displayOrder'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
    };
}

export function GenreResponseToJSON(json: any): GenreResponse {
    return GenreResponseToJSONTyped(json, false);
}

export function GenreResponseToJSONTyped(value?: GenreResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'icon': value['icon'],
        'displayOrder': value['displayOrder'],
        'createdAt': value['createdAt'] == null ? value['createdAt'] : value['createdAt'].toISOString(),
        'updatedAt': value['updatedAt'] == null ? value['updatedAt'] : value['updatedAt'].toISOString(),
        'isActive': value['isActive'],
    };
}

