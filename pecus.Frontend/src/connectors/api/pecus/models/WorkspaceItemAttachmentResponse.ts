/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ワークスペースアイテム添付ファイルレスポンス
 * @export
 * @interface WorkspaceItemAttachmentResponse
 */
export interface WorkspaceItemAttachmentResponse {
    /**
     * 添付ファイルID
     * @type {number}
     * @memberof WorkspaceItemAttachmentResponse
     */
    id?: number;
    /**
     * ワークスペースアイテムID
     * @type {number}
     * @memberof WorkspaceItemAttachmentResponse
     */
    workspaceItemId?: number;
    /**
     * ファイル名
     * @type {string}
     * @memberof WorkspaceItemAttachmentResponse
     */
    fileName?: string | null;
    /**
     * ファイルサイズ（バイト）
     * @type {number}
     * @memberof WorkspaceItemAttachmentResponse
     */
    fileSize?: number;
    /**
     * MIMEタイプ
     * @type {string}
     * @memberof WorkspaceItemAttachmentResponse
     */
    mimeType?: string | null;
    /**
     * ダウンロードURL
     * @type {string}
     * @memberof WorkspaceItemAttachmentResponse
     */
    downloadUrl?: string | null;
    /**
     * サムネイル（サイズM）URL
     * @type {string}
     * @memberof WorkspaceItemAttachmentResponse
     */
    thumbnailMediumUrl?: string | null;
    /**
     * サムネイル（サイズS）URL
     * @type {string}
     * @memberof WorkspaceItemAttachmentResponse
     */
    thumbnailSmallUrl?: string | null;
    /**
     * アップロード日時
     * @type {Date}
     * @memberof WorkspaceItemAttachmentResponse
     */
    uploadedAt?: Date;
    /**
     * アップロードしたユーザーID
     * @type {number}
     * @memberof WorkspaceItemAttachmentResponse
     */
    uploadedByUserId?: number;
    /**
     * アップロードしたユーザー名
     * @type {string}
     * @memberof WorkspaceItemAttachmentResponse
     */
    uploadedByUsername?: string | null;
}

/**
 * Check if a given object implements the WorkspaceItemAttachmentResponse interface.
 */
export function instanceOfWorkspaceItemAttachmentResponse(value: object): value is WorkspaceItemAttachmentResponse {
    return true;
}

export function WorkspaceItemAttachmentResponseFromJSON(json: any): WorkspaceItemAttachmentResponse {
    return WorkspaceItemAttachmentResponseFromJSONTyped(json, false);
}

export function WorkspaceItemAttachmentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkspaceItemAttachmentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'workspaceItemId': json['workspaceItemId'] == null ? undefined : json['workspaceItemId'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'fileSize': json['fileSize'] == null ? undefined : json['fileSize'],
        'mimeType': json['mimeType'] == null ? undefined : json['mimeType'],
        'downloadUrl': json['downloadUrl'] == null ? undefined : json['downloadUrl'],
        'thumbnailMediumUrl': json['thumbnailMediumUrl'] == null ? undefined : json['thumbnailMediumUrl'],
        'thumbnailSmallUrl': json['thumbnailSmallUrl'] == null ? undefined : json['thumbnailSmallUrl'],
        'uploadedAt': json['uploadedAt'] == null ? undefined : (new Date(json['uploadedAt'])),
        'uploadedByUserId': json['uploadedByUserId'] == null ? undefined : json['uploadedByUserId'],
        'uploadedByUsername': json['uploadedByUsername'] == null ? undefined : json['uploadedByUsername'],
    };
}

export function WorkspaceItemAttachmentResponseToJSON(json: any): WorkspaceItemAttachmentResponse {
    return WorkspaceItemAttachmentResponseToJSONTyped(json, false);
}

export function WorkspaceItemAttachmentResponseToJSONTyped(value?: WorkspaceItemAttachmentResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'workspaceItemId': value['workspaceItemId'],
        'fileName': value['fileName'],
        'fileSize': value['fileSize'],
        'mimeType': value['mimeType'],
        'downloadUrl': value['downloadUrl'],
        'thumbnailMediumUrl': value['thumbnailMediumUrl'],
        'thumbnailSmallUrl': value['thumbnailSmallUrl'],
        'uploadedAt': value['uploadedAt'] == null ? value['uploadedAt'] : value['uploadedAt'].toISOString(),
        'uploadedByUserId': value['uploadedByUserId'],
        'uploadedByUsername': value['uploadedByUsername'],
    };
}

