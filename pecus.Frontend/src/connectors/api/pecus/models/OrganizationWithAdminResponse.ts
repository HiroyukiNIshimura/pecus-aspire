/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
    UserResponseToJSONTyped,
} from './UserResponse';
import type { OrganizationResponse } from './OrganizationResponse';
import {
    OrganizationResponseFromJSON,
    OrganizationResponseFromJSONTyped,
    OrganizationResponseToJSON,
    OrganizationResponseToJSONTyped,
} from './OrganizationResponse';

/**
 * 組織登録レスポンス（管理者ユーザー情報含む）
 * @export
 * @interface OrganizationWithAdminResponse
 */
export interface OrganizationWithAdminResponse {
    /**
     * 
     * @type {OrganizationResponse}
     * @memberof OrganizationWithAdminResponse
     */
    organization: OrganizationResponse;
    /**
     * 
     * @type {UserResponse}
     * @memberof OrganizationWithAdminResponse
     */
    adminUser: UserResponse;
}

/**
 * Check if a given object implements the OrganizationWithAdminResponse interface.
 */
export function instanceOfOrganizationWithAdminResponse(value: object): value is OrganizationWithAdminResponse {
    if (!('organization' in value) || value['organization'] === undefined) return false;
    if (!('adminUser' in value) || value['adminUser'] === undefined) return false;
    return true;
}

export function OrganizationWithAdminResponseFromJSON(json: any): OrganizationWithAdminResponse {
    return OrganizationWithAdminResponseFromJSONTyped(json, false);
}

export function OrganizationWithAdminResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationWithAdminResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'organization': OrganizationResponseFromJSON(json['organization']),
        'adminUser': UserResponseFromJSON(json['adminUser']),
    };
}

export function OrganizationWithAdminResponseToJSON(json: any): OrganizationWithAdminResponse {
    return OrganizationWithAdminResponseToJSONTyped(json, false);
}

export function OrganizationWithAdminResponseToJSONTyped(value?: OrganizationWithAdminResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization': OrganizationResponseToJSON(value['organization']),
        'adminUser': UserResponseToJSON(value['adminUser']),
    };
}

