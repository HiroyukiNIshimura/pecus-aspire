/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 組織登録リクエスト
 * @export
 * @interface CreateOrganizationRequest
 */
export interface CreateOrganizationRequest {
    /**
     * 組織名
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    name: string;
    /**
     * 電話番号
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    phoneNumber: string;
    /**
     * 組織コード
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    code?: string | null;
    /**
     * 組織の説明
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    description?: string | null;
    /**
     * 代表者名
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    representativeName?: string | null;
    /**
     * メールアドレス
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    email?: string | null;
    /**
     * 管理者ユーザー名
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    adminUsername: string;
    /**
     * 管理者メールアドレス
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    adminEmail: string;
    /**
     * 管理者パスワード
     * @type {string}
     * @memberof CreateOrganizationRequest
     */
    adminPassword: string;
}

/**
 * Check if a given object implements the CreateOrganizationRequest interface.
 */
export function instanceOfCreateOrganizationRequest(value: object): value is CreateOrganizationRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('adminUsername' in value) || value['adminUsername'] === undefined) return false;
    if (!('adminEmail' in value) || value['adminEmail'] === undefined) return false;
    if (!('adminPassword' in value) || value['adminPassword'] === undefined) return false;
    return true;
}

export function CreateOrganizationRequestFromJSON(json: any): CreateOrganizationRequest {
    return CreateOrganizationRequestFromJSONTyped(json, false);
}

export function CreateOrganizationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrganizationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'phoneNumber': json['phoneNumber'],
        'code': json['code'] == null ? undefined : json['code'],
        'description': json['description'] == null ? undefined : json['description'],
        'representativeName': json['representativeName'] == null ? undefined : json['representativeName'],
        'email': json['email'] == null ? undefined : json['email'],
        'adminUsername': json['adminUsername'],
        'adminEmail': json['adminEmail'],
        'adminPassword': json['adminPassword'],
    };
}

export function CreateOrganizationRequestToJSON(json: any): CreateOrganizationRequest {
    return CreateOrganizationRequestToJSONTyped(json, false);
}

export function CreateOrganizationRequestToJSONTyped(value?: CreateOrganizationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'phoneNumber': value['phoneNumber'],
        'code': value['code'],
        'description': value['description'],
        'representativeName': value['representativeName'],
        'email': value['email'],
        'adminUsername': value['adminUsername'],
        'adminEmail': value['adminEmail'],
        'adminPassword': value['adminPassword'],
    };
}

