/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ファイルアップロードレスポンス
 * @export
 * @interface FileUploadResponse
 */
export interface FileUploadResponse {
    /**
     * アップロード成功フラグ
     * @type {boolean}
     * @memberof FileUploadResponse
     */
    success?: boolean;
    /**
     * ファイルURL（公開アクセス用）
     * @type {string}
     * @memberof FileUploadResponse
     */
    fileUrl?: string | null;
    /**
     * ファイルサイズ（バイト）
     * @type {number}
     * @memberof FileUploadResponse
     */
    fileSize?: number;
    /**
     * ファイル形式
     * @type {string}
     * @memberof FileUploadResponse
     */
    contentType?: string | null;
    /**
     * アップロード日時
     * @type {Date}
     * @memberof FileUploadResponse
     */
    uploadedAt?: Date;
    /**
     * メッセージ
     * @type {string}
     * @memberof FileUploadResponse
     */
    message?: string | null;
}

/**
 * Check if a given object implements the FileUploadResponse interface.
 */
export function instanceOfFileUploadResponse(value: object): value is FileUploadResponse {
    return true;
}

export function FileUploadResponseFromJSON(json: any): FileUploadResponse {
    return FileUploadResponseFromJSONTyped(json, false);
}

export function FileUploadResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileUploadResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'] == null ? undefined : json['success'],
        'fileUrl': json['fileUrl'] == null ? undefined : json['fileUrl'],
        'fileSize': json['fileSize'] == null ? undefined : json['fileSize'],
        'contentType': json['contentType'] == null ? undefined : json['contentType'],
        'uploadedAt': json['uploadedAt'] == null ? undefined : (new Date(json['uploadedAt'])),
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function FileUploadResponseToJSON(json: any): FileUploadResponse {
    return FileUploadResponseToJSONTyped(json, false);
}

export function FileUploadResponseToJSONTyped(value?: FileUploadResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'fileUrl': value['fileUrl'],
        'fileSize': value['fileSize'],
        'contentType': value['contentType'],
        'uploadedAt': value['uploadedAt'] == null ? value['uploadedAt'] : value['uploadedAt'].toISOString(),
        'message': value['message'],
    };
}

