/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TagInfoResponse } from './TagInfoResponse';
import {
    TagInfoResponseFromJSON,
    TagInfoResponseFromJSONTyped,
    TagInfoResponseToJSON,
    TagInfoResponseToJSONTyped,
} from './TagInfoResponse';

/**
 * ワークスペースアイテム詳細レスポンス
 * @export
 * @interface WorkspaceItemDetailResponse
 */
export interface WorkspaceItemDetailResponse {
    /**
     * アイテムID
     * @type {number}
     * @memberof WorkspaceItemDetailResponse
     */
    id?: number;
    /**
     * ワークスペースID
     * @type {number}
     * @memberof WorkspaceItemDetailResponse
     */
    workspaceId?: number;
    /**
     * ワークスペース名
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    workspaceName?: string | null;
    /**
     * コード
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    code?: string | null;
    /**
     * 件名
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    subject?: string | null;
    /**
     * 本文
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    body?: string | null;
    /**
     * オーナーユーザーID
     * @type {number}
     * @memberof WorkspaceItemDetailResponse
     */
    ownerId?: number;
    /**
     * オーナーユーザー名
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    ownerUsername?: string | null;
    /**
     * オーナーアバターURL
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    ownerAvatarUrl?: string | null;
    /**
     * 作業中のユーザーID
     * @type {number}
     * @memberof WorkspaceItemDetailResponse
     */
    assigneeId?: number | null;
    /**
     * 作業中のユーザー名
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    assigneeUsername?: string | null;
    /**
     * 作業中のユーザーアバターURL
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    assigneeAvatarUrl?: string | null;
    /**
     * 重要度（1: 低、2: 普通、3: 高）
     * @type {number}
     * @memberof WorkspaceItemDetailResponse
     */
    priority?: number;
    /**
     * 期限日
     * @type {Date}
     * @memberof WorkspaceItemDetailResponse
     */
    dueDate?: Date;
    /**
     * アーカイブフラグ
     * @type {boolean}
     * @memberof WorkspaceItemDetailResponse
     */
    isArchived?: boolean;
    /**
     * 下書き中フラグ
     * @type {boolean}
     * @memberof WorkspaceItemDetailResponse
     */
    isDraft?: boolean;
    /**
     * コミッターユーザーID
     * @type {number}
     * @memberof WorkspaceItemDetailResponse
     */
    committerId?: number | null;
    /**
     * コミッターユーザー名
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    committerUsername?: string | null;
    /**
     * コミッターアバターURL
     * @type {string}
     * @memberof WorkspaceItemDetailResponse
     */
    committerAvatarUrl?: string | null;
    /**
     * 作成日時
     * @type {Date}
     * @memberof WorkspaceItemDetailResponse
     */
    createdAt?: Date;
    /**
     * 更新日時
     * @type {Date}
     * @memberof WorkspaceItemDetailResponse
     */
    updatedAt?: Date;
    /**
     * タグのリスト
     * @type {Array<TagInfoResponse>}
     * @memberof WorkspaceItemDetailResponse
     */
    tags?: Array<TagInfoResponse> | null;
    /**
     * ログイン中のユーザーがこのアイテムをPINしているか
     * @type {boolean}
     * @memberof WorkspaceItemDetailResponse
     */
    isPinned?: boolean;
    /**
     * このアイテムのPIN総数
     * @type {number}
     * @memberof WorkspaceItemDetailResponse
     */
    pinCount?: number;
}

/**
 * Check if a given object implements the WorkspaceItemDetailResponse interface.
 */
export function instanceOfWorkspaceItemDetailResponse(value: object): value is WorkspaceItemDetailResponse {
    return true;
}

export function WorkspaceItemDetailResponseFromJSON(json: any): WorkspaceItemDetailResponse {
    return WorkspaceItemDetailResponseFromJSONTyped(json, false);
}

export function WorkspaceItemDetailResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkspaceItemDetailResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'workspaceId': json['workspaceId'] == null ? undefined : json['workspaceId'],
        'workspaceName': json['workspaceName'] == null ? undefined : json['workspaceName'],
        'code': json['code'] == null ? undefined : json['code'],
        'subject': json['subject'] == null ? undefined : json['subject'],
        'body': json['body'] == null ? undefined : json['body'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'ownerUsername': json['ownerUsername'] == null ? undefined : json['ownerUsername'],
        'ownerAvatarUrl': json['ownerAvatarUrl'] == null ? undefined : json['ownerAvatarUrl'],
        'assigneeId': json['assigneeId'] == null ? undefined : json['assigneeId'],
        'assigneeUsername': json['assigneeUsername'] == null ? undefined : json['assigneeUsername'],
        'assigneeAvatarUrl': json['assigneeAvatarUrl'] == null ? undefined : json['assigneeAvatarUrl'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'dueDate': json['dueDate'] == null ? undefined : (new Date(json['dueDate'])),
        'isArchived': json['isArchived'] == null ? undefined : json['isArchived'],
        'isDraft': json['isDraft'] == null ? undefined : json['isDraft'],
        'committerId': json['committerId'] == null ? undefined : json['committerId'],
        'committerUsername': json['committerUsername'] == null ? undefined : json['committerUsername'],
        'committerAvatarUrl': json['committerAvatarUrl'] == null ? undefined : json['committerAvatarUrl'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagInfoResponseFromJSON)),
        'isPinned': json['isPinned'] == null ? undefined : json['isPinned'],
        'pinCount': json['pinCount'] == null ? undefined : json['pinCount'],
    };
}

export function WorkspaceItemDetailResponseToJSON(json: any): WorkspaceItemDetailResponse {
    return WorkspaceItemDetailResponseToJSONTyped(json, false);
}

export function WorkspaceItemDetailResponseToJSONTyped(value?: WorkspaceItemDetailResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'workspaceId': value['workspaceId'],
        'workspaceName': value['workspaceName'],
        'code': value['code'],
        'subject': value['subject'],
        'body': value['body'],
        'ownerId': value['ownerId'],
        'ownerUsername': value['ownerUsername'],
        'ownerAvatarUrl': value['ownerAvatarUrl'],
        'assigneeId': value['assigneeId'],
        'assigneeUsername': value['assigneeUsername'],
        'assigneeAvatarUrl': value['assigneeAvatarUrl'],
        'priority': value['priority'],
        'dueDate': value['dueDate'] == null ? value['dueDate'] : value['dueDate'].toISOString(),
        'isArchived': value['isArchived'],
        'isDraft': value['isDraft'],
        'committerId': value['committerId'],
        'committerUsername': value['committerUsername'],
        'committerAvatarUrl': value['committerAvatarUrl'],
        'createdAt': value['createdAt'] == null ? value['createdAt'] : value['createdAt'].toISOString(),
        'updatedAt': value['updatedAt'] == null ? value['updatedAt'] : value['updatedAt'].toISOString(),
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(TagInfoResponseToJSON)),
        'isPinned': value['isPinned'],
        'pinCount': value['pinCount'],
    };
}

