/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ユーザー情報レスポンス
 * @export
 * @interface UserResponse
 */
export interface UserResponse {
    /**
     * ユーザーID
     * @type {number}
     * @memberof UserResponse
     */
    id?: number;
    /**
     * ログインID
     * @type {string}
     * @memberof UserResponse
     */
    loginId: string | null;
    /**
     * ユーザー名
     * @type {string}
     * @memberof UserResponse
     */
    username: string | null;
    /**
     * メールアドレス
     * @type {string}
     * @memberof UserResponse
     */
    email: string | null;
    /**
     * アバタータイプ
     * @type {string}
     * @memberof UserResponse
     */
    avatarType?: string | null;
    /**
     * アイデンティティアイコンURL
     * @type {string}
     * @memberof UserResponse
     */
    identityIconUrl?: string | null;
    /**
     * 作成日時
     * @type {Date}
     * @memberof UserResponse
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the UserResponse interface.
 */
export function instanceOfUserResponse(value: object): value is UserResponse {
    if (!('loginId' in value) || value['loginId'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function UserResponseFromJSON(json: any): UserResponse {
    return UserResponseFromJSONTyped(json, false);
}

export function UserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'loginId': json['loginId'],
        'username': json['username'],
        'email': json['email'],
        'avatarType': json['avatarType'] == null ? undefined : json['avatarType'],
        'identityIconUrl': json['identityIconUrl'] == null ? undefined : json['identityIconUrl'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function UserResponseToJSON(json: any): UserResponse {
    return UserResponseToJSONTyped(json, false);
}

export function UserResponseToJSONTyped(value?: UserResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'loginId': value['loginId'],
        'username': value['username'],
        'email': value['email'],
        'avatarType': value['avatarType'],
        'identityIconUrl': value['identityIconUrl'],
        'createdAt': value['createdAt'] == null ? value['createdAt'] : value['createdAt'].toISOString(),
    };
}

