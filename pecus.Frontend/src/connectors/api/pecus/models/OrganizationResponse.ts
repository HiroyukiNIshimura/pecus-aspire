/* tslint:disable */
/* eslint-disable */
/**
 * Pecus API
 * AIを社畜扱いして作成するWebAPIです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 組織情報レスポンス
 * @export
 * @interface OrganizationResponse
 */
export interface OrganizationResponse {
    /**
     * 組織ID
     * @type {number}
     * @memberof OrganizationResponse
     */
    id?: number;
    /**
     * 組織名
     * @type {string}
     * @memberof OrganizationResponse
     */
    name: string | null;
    /**
     * 組織コード
     * @type {string}
     * @memberof OrganizationResponse
     */
    code?: string | null;
    /**
     * 組織の説明
     * @type {string}
     * @memberof OrganizationResponse
     */
    description?: string | null;
    /**
     * 代表者名
     * @type {string}
     * @memberof OrganizationResponse
     */
    representativeName?: string | null;
    /**
     * 電話番号
     * @type {string}
     * @memberof OrganizationResponse
     */
    phoneNumber: string | null;
    /**
     * メールアドレス
     * @type {string}
     * @memberof OrganizationResponse
     */
    email?: string | null;
    /**
     * 作成日時
     * @type {Date}
     * @memberof OrganizationResponse
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the OrganizationResponse interface.
 */
export function instanceOfOrganizationResponse(value: object): value is OrganizationResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    return true;
}

export function OrganizationResponseFromJSON(json: any): OrganizationResponse {
    return OrganizationResponseFromJSONTyped(json, false);
}

export function OrganizationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'code': json['code'] == null ? undefined : json['code'],
        'description': json['description'] == null ? undefined : json['description'],
        'representativeName': json['representativeName'] == null ? undefined : json['representativeName'],
        'phoneNumber': json['phoneNumber'],
        'email': json['email'] == null ? undefined : json['email'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function OrganizationResponseToJSON(json: any): OrganizationResponse {
    return OrganizationResponseToJSONTyped(json, false);
}

export function OrganizationResponseToJSONTyped(value?: OrganizationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'code': value['code'],
        'description': value['description'],
        'representativeName': value['representativeName'],
        'phoneNumber': value['phoneNumber'],
        'email': value['email'],
        'createdAt': value['createdAt'] == null ? value['createdAt'] : value['createdAt'].toISOString(),
    };
}

